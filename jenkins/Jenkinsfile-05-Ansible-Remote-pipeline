pipeline {
    agent any
    environment {
        ANSIBLE_CONFIG = "${WORKSPACE}/ansible/ansible.cfg"
        ANSIBLE_HOSTS = "${WORKSPACE}/ansible/ansible_hosts"
        DOCKER_IMAGE_MVC = "customhaven/devadopt_mvc:${params.BUILD_ID}"
        DOCKER_IMAGE_DB = "customhaven/devadopt_db:72"
        AWS_PEM_ID = credentials('AWS_PEM_ID')
    }
    stages {
        stage("Checkout Code") {
            steps {
                checkout scm
            }
        }
        stage("Prepare Ansible") {
            steps {
                sh '''
                mkdir -p ~/.ssh
                echo "$AWS_PEM_ID" > ~/.ssh/default-ec2.pem
                chmod 600 ~/.ssh/default-ec2.pem

                sed -i "s|private_key_file=.*|private_key_file=~/.ssh/default-ec2.pem|" ${ANSIBLE_CONFIG}
                '''
            }
        }
        stage("Send Docker-Compose to EC2 Instances") {
            steps {
                script {
                    sh "cat $ANSIBLE_CONFIG"
                    withCredentials([file(credentialsId: "DevAdopts_ENV", variable: "ENV_FILE_MVC")]) {
                        def hosts = readFile("${ANSIBLE_HOSTS}").split("\n").findAll { it =~ /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/ }

                        for (host in hosts) {
                            sh """
                            cp ${EN_FILE_MVC} .env
                            sh "echo IMAGE_MVC_TAG=${env.DOCKER_IMAGE_MVC} >> .env"
                            sh "echo IMAGE_DB_TAG=${env.DOCKER_IMAGE_DB} >> .env"
                            scp -o StrictHostKeyChecking=no -i ~/.ssh/default-ec2.pem .env ec2-user@${host}:/home/ec2-user/
                            scp -o StrictHostKeyChecking=no -i ~/.ssh/default-ec2.pem docker-compose.yml ec2-user@${host}:/home/ec2-user/
                            rm .env
                            """
                        }
                    }
                }
            }
        }
        stage("Run Docker Install Playbook") {
            steps {
                dir("ansible") {
                    script {
                        sh '''
                        ansible-playbook -i ${ANSIBLE_HOSTS} ansible/playbooks/docker-install.yml
                        '''
                    }
                }
            }
        }
        stage('Run Docker Compose Playbook') {
            steps {
                dir("ansible") {
                    script {
                        sh '''
                        ansible-playbook -i ${ANSIBLE_HOSTS} ansible/playbooks/docker-run.yml
                        '''
                    }
                }
            }
        }
    }
}