version: "3.9"
services:
    devadopt-db:
        image: ${IMAGE_DB_TAG}
        ports:
            - "5432:5432"
        restart: always
        networks:
            - devadopt-network
        container_name: devadopt_db
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            resources:
                limits:
                    memory: 2g

    devadopt-mvc:
        image: ${IMAGE_MVC_TAG}
        command: pm2 start index.js --node-args="--max-old-space-size=16384" --no-daemon
        depends_on:
            devadopt-db:
                condition: service_healthy
        restart: always
        networks:
            - devadopt-network
        env_file:
            .env
        deploy:
            resources:
                limits:
                    memory: 16g

    nginx:
        image: nginx
        ports:
            - "3333:80"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - devadopt-mvc

networks:
    devadopt-network:
        name: devadopt-network